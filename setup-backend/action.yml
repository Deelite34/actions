name: setup-backend
description: Sets up runner environment for backend code.

inputs:
  python-version:
    description: Python version to use
    default: '3.8'
    required: false
    type: string
  pipenv-version:
    description: Pipenv version to use
    default: '2022.12.19'
    required: false
    type: string

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}

    - uses: actions/cache@v3
      id: cache-pipenv
      with:
        path: |
          ${{ env.pythonLocation }}/bin/pipenv
          ${{ env.pythonLocation }}/lib/python${{ inputs.python-version }}/site-packages/pipenv
        key: python${{ inputs.python-version }}-pipenv${{ inputs.pipenv-version }}
        restore-keys: python${{ inputs.python-version }}-pipenv

    - name: conditionally install pipenv
      shell: bash
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      working-directory: ./backend
      run: pip install pipenv==${{ inputs.pipenv-version }}

    - uses: actions/cache@v3
      id: cache-lockfile
      with:
        path: ./backend/.venv
        key: python${{ inputs.python-version }}-lockfile${{ hashFiles('backend/Pipfile.lock') }}
        restore-keys: python${{ inputs.python-version }}-lockfile

    - name: conditionally install dependencies
      shell: bash
      if: steps.cache-lockfile.outputs.cache-hit != 'true'
      working-directory: ./backend
      run: pipenv install --dev --deploy
      env:
        PIPENV_VENV_IN_PROJECT: 1
    
    - name: get black version
      uses: mathiasvr/command-output@v1
      id: blackv
      with:
        run: black --version
    
    - name: print black version
      shell: bash
      run: echo Today is ${{ steps.blackv.outputs.stdout }}
    
    - run: echo Command succeeded ${{ steps.blackv.outputs.stdout }}
      if: ${{ steps.cmd.outputs.stdout }}

    - run: echo Command failed ${{ steps.blackv.outputs.stderr }}
      if: ${{ steps.cmd.outputs.stderr }}
